/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        minus_left_arrow: minus_left_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GT>;
            label = "MINUS_LEFT_ARROW";
        };

        equals_left_arrow: equals_left_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
            label = "EQUALS_LEFT_ARROW";
        };
    };

    behaviors {
        HML: HML {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };

        HMR: HMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <6 7 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 8 38 37 36>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp LEFT_SHIFT  &kp Q                &kp W            &kp E             &kp R              &kp T            &kp Y                &kp U               &kp I              &kp O             &kp P                         &kp GRAVE
&mt LCTRL TAB   &HML LEFT_CONTROL A  &HML LEFT_ALT S  &HML LEFT_META D  &HML LEFT_SHIFT F  &kp G            &kp H                &HMR RIGHT_SHIFT J  &HMR RIGHT_META K  &HMR RIGHT_ALT L  &HMR RIGHT_CONTROL SEMICOLON  &kp SQT
&kp LEFT_ALT    &kp Z                &kp X            &kp C             &kp V              &kp B            &kp N                &kp M               &kp COMMA          &kp DOT           &kp FSLH                      &mt RS(RA(RC(RGUI))) BACKSLASH
                                                      &kp LGUI          &mo 1              &kp BACKSPACE    &mt RIGHT_SHIFT RET  &lt 2 SPACE         &kp ESCAPE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&trans  &kp MINUS          &kp PLUS            &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none     &kp RS(RC(TAB))  &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)  &kp RC(TAB)  &kp C_STOP         &kp C_PLAY_PAUSE
&trans  &kp UNDER          &kp EQUAL           &kp LEFT_BRACE        &kp RIGHT_BRACE        &none     &kp LEFT         &kp DOWN              &kp UP                 &kp RIGHT    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP
&trans  &minus_left_arrow  &equals_left_arrow  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &none     &kp HOME         &kp PAGE_DOWN         &kp PAGE_UP            &kp END      &kp C_MUTE         &kp RS(RG(NUMBER_4))
                                               &trans                &trans                 &trans    &trans           &trans                &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&trans  &kp F1           &kp F2        &kp F3        &kp F4        &kp F5         &kp F6        &kp F7         &kp F8        &kp F9                &kp F10                &kp F11
&trans  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5         &kp NUMBER_6  &kp NUMBER_7   &kp NUMBER_8  &kp NUMBER_9          &kp NUMBER_0           &kp F12
&trans  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT    &kp CARET     &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
                                       &trans        &trans        &trans         &trans        &trans         &trans
            >;
        };

        extra_1 { status = "reserved"; };

        extra_2 { status = "reserved"; };

        extra_3 { status = "reserved"; };
    };
};
